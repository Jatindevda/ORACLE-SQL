-- (1)
SELECT * FROM EMPLOYEES
WHERE HIRE_DATE > TO_DATE(1997, 'YYYY') AND JOB_ID LIKE '%CLERK%';

-- (2)
SELECT LAST_NAME, JOB_ID, SALARY, COMMISSION_PCT FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL
ORDER BY SALARY DESC;

-- (3)
SELECT 'THE SALARY OF'||' '|| LAST_NAME ||' ' ||'AFTER A 10% RAISE IS'||' ' || ROUND((SALARY/100*10)+SALARY) AS "NEW SALARY" FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL; -- ROUND(SALARY*1.1)

-- (4)
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'YY') AS YEARS, TO_CHAR(HIRE_DATE, 'MM') AS MONTHS FROM EMPLOYEES;

-- (5)
SELECT DISTINCT(LAST_NAME) FROM EMPLOYEES -- WITHOUT DUPLICATES
WHERE LAST_NAME LIKE 'J%' OR LAST_NAME LIKE 'K%' OR LAST_NAME LIKE 'L%' OR LAST_NAME LIKE 'M%';

SELECT LAST_NAME FROM EMPLOYEES -- WITH DUPLICATES
WHERE LAST_NAME LIKE 'J%' OR LAST_NAME LIKE 'K%' OR LAST_NAME LIKE 'L%' OR LAST_NAME LIKE 'M%';

-- (6)
SELECT LAST_NAME, SALARY, NVL2(COMMISSION_PCT, 'YES', 'NO') AS COM FROM EMPLOYEES;

-- (7)
SELECT D.DEPARTMENT_NAME, D.LOCATION_ID, E.LAST_NAME, E.JOB_ID, E.SALARY  FROM EMPLOYEES E JOIN DEPARTMENTS D
ON (E.DEPARTMENT_ID = D.DEPARTMENT_ID) -- ON CLAUSE
WHERE LOCATION_ID = 1800;

SELECT DEPARTMENT_NAME, LOCATION_ID, LAST_NAME, JOB_ID, SALARY  FROM EMPLOYEES  JOIN DEPARTMENTS 
USING (DEPARTMENT_ID) -- USING CLAUSE
WHERE LOCATION_ID = 1800;

-- (8)
SELECT COUNT(*) FROM EMPLOYEES
WHERE LAST_NAME LIKE '%n';

SELECT COUNT(*) FROM EMPLOYEES
WHERE REGEXP_LIKE(LAST_NAME, 'n$');

-- (9)
SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, COUNT(EMPLOYEE_ID) FROM EMPLOYEES FULL JOIN DEPARTMENTS -- WITH NULL 
USING (DEPARTMENT_ID)
GROUP BY DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID;

SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, COUNT(EMPLOYEE_ID) FROM EMPLOYEES RIGHT JOIN DEPARTMENTS -- WITHOUT NULL
USING (DEPARTMENT_ID)
GROUP BY DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID;

SELECT DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID, COUNT(EMPLOYEE_ID) FROM EMPLOYEES  JOIN DEPARTMENTS -- WITHOUT 0 AND NULL 
USING (DEPARTMENT_ID)
GROUP BY DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID;

-- (10)
SELECT JOB_ID FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10,20);

-- (11)
SELECT JOB_ID, COUNT(EMPLOYEE_ID) AS "FREQUENCY" FROM EMPLOYEES 
WHERE JOB_ID LIKE 'AD%'
GROUP BY JOB_ID
ORDER BY JOB_ID DESC;

-- (12)
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'DD-MON-YY') FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'DD') < 16;

-- (13)
SELECT LAST_NAME, SALARY, TRUNC(SALARY/1000) AS THOUSANDS FROM EMPLOYEES;

-- (13(OR))
SELECT E.LAST_NAME, EE.LAST_NAME AS MANAGER, EE.SALARY, J.GRADE_LEVEL AS GRA FROM EMPLOYEES E, EMPLOYEES EE, JOB_GRADES_1 J
WHERE EE.SALARY > 15000 
AND EE.EMPLOYEE_ID = E.MANAGER_ID 
AND EE.SALARY BETWEEN J.LOWEST_SAL 
AND J.HIGHEST_SAL;

-- (14)
SELECT A.DEPARTMENT_ID, A.DEPARTMENT_NAME, CO, AV, B.LAST_NAME, B.SALARY, B.JOB_ID FROM
(SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME,COUNT(EMPLOYEE_ID) CO, AVG(SALARY) AV  FROM EMPLOYEES E JOIN DEPARTMENTS D 
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME)A,
(SELECT DEPARTMENT_ID,   LAST_NAME, SALARY, JOB_ID FROM EMPLOYEES )B
WHERE A.DEPARTMENT_ID = B.DEPARTMENT_ID;

-- (15)
SELECT DEPARTMENT_ID, MIN(SALARY) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID 
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID));

-- (16)
SELECT DEPARTMENT_ID, DEPARTMENT_NAME, MANAGER_ID, LOCATION_ID FROM DEPARTMENTS
WHERE DEPARTMENT_NAME != 'Sales';

-- (17-A)
SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES E , DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEE_ID) <3;

-- (17-B)
SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEE_ID) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

-- (17-C)
SELECT E.DEPARTMENT_ID, D.DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING COUNT(EMPLOYEE_ID) = (SELECT MIN(COUNT(*)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

-- (18)
SELECT EMPLOYEE_ID, LAST_NAME, DEPARTMENT_ID, AVG(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS "AVG(SALARY)" FROM EMPLOYEES
ORDER BY EMPLOYEE_ID;

-- (19)
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'DAY') FROM EMPLOYEES
WHERE TO_CHAR(HIRE_DATE, 'DAY') = (SELECT TO_CHAR(HIRE_DATE, 'DAY') FROM EMPLOYEES 
GROUP BY TO_CHAR(HIRE_DATE, 'DAY')
HAVING COUNT(TO_CHAR(HIRE_DATE, 'DAY')) = (SELECT MAX(COUNT(TO_CHAR(HIRE_DATE, 'DAY'))) FROM EMPLOYEES 
GROUP BY TO_CHAR(HIRE_DATE, 'DAY')));

-- (20)
SELECT LAST_NAME, TO_CHAR(HIRE_DATE, 'MONTH DD') AS BIRTHDAY FROM EMPLOYEES
ORDER BY TO_CHAR(HIRE_DATE, 'MM');
 
-- (21)
SELECT X.JOB_ID FROM EMPLOYEES X , EMPLOYEES Y
WHERE TO_CHAR(X.HIRE_DATE, 'YYYY') = '1990' 
--AND TO_CHAR(X.HIRE_DATE, 'MM') >=1 
AND TO_CHAR(X.HIRE_DATE, 'MM') <=6 
AND TO_CHAR(Y.HIRE_DATE, 'YYYY') = '1991'; 
--AND X.JOB_ID = Y.JOB_ID ;

-- (22)
SELECT '5% RAISE' AS RAISE,EMPLOYEE_ID, SALARY, ROUND(SALARY/100*5) AS NEW_SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (10,50,110)
UNION
SELECT '10% RAISE' AS RAISE, EMPLOYEE_ID, SALARY, ROUND(SALARY/100*10) AS NEW_SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID = 60
UNION
SELECT '15% RAISE' AS RAISE, EMPLOYEE_ID, SALARY, ROUND(SALARY/100*15) AS NEW_SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID IN (20,80)
UNION
SELECT 'NO RAISE' AS RAISE, EMPLOYEE_ID, SALARY, SALARY AS NEW_SALARY FROM EMPLOYEES
WHERE DEPARTMENT_ID = 90;

-- (23)
ALTER SESSION 
SET NLS_DATE_FORMAT = 'DD-MON-YYYY HH24:MI:SS';

-- (24-A)
SELECT TZ_OFFSET('AUSTRALIA/SYDNEY') FROM DUAL;

-- (24-B)
SELECT TZ_OFFSET('CHILE/EASTERISLAND') FROM DUAL;

-- (24-C)
ALTER SESSION SET TIME_ZONE = '+10:00';

-- (24-D)
SELECT SYSDATE,CURRENT_DATE, CURRENT_TIMESTAMP, LOCALTIMESTAMP
FROM DUAL;

-- (24-E)
ALTER SESSION SET TIME_ZONE = '-06:00';

-- (24-F)
SELECT SYSDATE, CURRENT_DATE, CURRENT_TIMESTAMP, LOCALTIMESTAMP
FROM DUAL;

-- (25)
SELECT LAST_NAME, EXTRACT(MONTH FROM HIRE_DATE), TO_CHAR(HIRE_DATE, 'DD-MON-YYYY HH24:MI:SS')AS HIRE_DATE FROM EMPLOYEES
WHERE  TO_CHAR(HIRE_DATE, 'MON') = 'JAN';

-- (26)
SELECT L.CITY, D.DEPARTMENT_NAME, E.JOB_ID, TO_CHAR(SUM(E.SALARY), '$999999') AS "SUM(SALARY)"
FROM EMPLOYEES E, DEPARTMENTS D, LOCATIONS L
WHERE D.LOCATION_ID = L.LOCATION_ID 
AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
AND E.DEPARTMENT_ID > 80
GROUP BY CUBE (L.CITY, D.DEPARTMENT_NAME, E.JOB_ID);

-- (27)
SELECT DEPARTMENT_ID, JOB_ID, MANAGER_ID, MAX(SALARY), MIN(SALARY) FROM EMPLOYEES 
GROUP BY GROUPING SETS ((DEPARTMENT_ID, JOB_ID), (JOB_ID, MANAGER_ID));

-- (28)
SELECT LAST_NAME, SALARY
FROM  (SELECT LAST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC)
WHERE ROWNUM <=3;

-- (29)
SELECT E.EMPLOYEE_ID, E.LAST_NAME FROM EMPLOYEES E, LOCATIONS L, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID 
AND D.LOCATION_ID = L.LOCATION_ID
AND L.STATE_PROVINCE = 'California';

-- (30)
DELETE FROM EMPLOYEES 
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM JOB_HISTORY  WHERE START_DATE = (SELECT MIN(START_DATE) FROM JOB_HISTORY));

-- (31)
DELETE FROM EMPLOYEES 
WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM JOB_HISTORY  WHERE START_DATE = (SELECT MIN(START_DATE) FROM JOB_HISTORY));

ROLLBACK;

-- (32)
WITH 
MAX_SAL_CALC AS (SELECT JOB_TITLE, MAX(SALARY) AS JOB_TOTAL FROM EMPLOYEES E,JOBS J
WHERE E.JOB_ID = J.JOB_ID
GROUP BY JOB_TITLE)
SELECT JOB_TITLE, JOB_TOTAL FROM MAX_SAL_CALC
WHERE JOB_TOTAL > (SELECT MAX(JOB_TOTAL)/2 FROM MAX_SAL_CALC)
ORDER BY JOB_TOTAL DESC;
------------------------------------------------------------------
WITH 
MAX_SAL_CALC AS (SELECT JOB_TITLE, MAX(SALARY) AS JOB_TOTAL FROM EMPLOYEES E,JOBS J
WHERE E.JOB_ID = J.JOB_ID
GROUP BY JOB_TITLE),

ABOVE_MAX_SAL_CALC AS (SELECT MAX(SALARY)/2 AS MAX_MAX FROM EMPLOYEES)

SELECT * FROM MAX_SAL_CALC
WHERE JOB_TOTAL > (SELECT MAX_MAX FROM ABOVE_MAX_SAL_CALC)
ORDER BY JOB_TOTAL DESC;

-- (33-A)
SELECT EMPLOYEE_ID, LAST_NAME, TO_CHAR(HIRE_DATE, 'DD-MON-YYYY HH24:MI:SS'), SALARY FROM EMPLOYEES
WHERE MANAGER_ID = (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE LAST_NAME = 'De Haan');

-- (33-B)
SELECT EMPLOYEE_ID, LAST_NAME, TO_CHAR(HIRE_DATE, 'DD-MON-YYYY HH24:MI:SS'), SALARY FROM EMPLOYEES
WHERE EMPLOYEE_ID != 102
START WITH EMPLOYEE_ID = 102
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;

-- (34)
SELECT EMPLOYEE_ID, MANAGER_ID, LEVEL, LAST_NAME FROM EMPLOYEES
WHERE LEVEL = 3
START WITH EMPLOYEE_ID = 102
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID;

-- (35)
SELECT EMPLOYEE_ID, MANAGER_ID, LEVEL, LPAD(LAST_NAME, LENGTH(LAST_NAME) + (LEVEL*2)-2, '_')  FROM EMPLOYEES
CONNECT BY EMPLOYEE_ID = PRIOR MANAGER_ID;

-- (36)
SELECT EMPLOYEE_ID, HIRE_DATE, SALARY, MANAGER_ID FROM EMPLOYEES
WHERE EMPLOYEE_ID >= 200;
----------------------------------------------------------------
CREATE TABLE SPECIAL_SAL 
AS SELECT EMPLOYEE_ID, SALARY FROM EMPLOYEES WHERE SALARY < 5000;
----------------------------------------------------------------
CREATE TABLE SAL_HISTORY 
AS SELECT EMPLOYEE_ID,HIRE_DATE, SALARY FROM EMPLOYEES;
----------------------------------------------------------------
CREATE TABLE MGR_HISTORY 
AS SELECT EMPLOYEE_ID,MANAGER_ID, SALARY FROM EMPLOYEES;

-- (37)
SELECT * FROM SPECIAL_SAL;
---------------------------
SELECT EMPLOYEE_ID, TO_CHAR(HIRE_DATE, 'DD-MON-YYYY HH24:MI:SS'), SALARY  FROM SAL_HISTORY;
---------------------------
SELECT * FROM MGR_HISTORY;

-- (38)
CREATE TABLE LOCATIONS_NAMED_INDEX(
LOCATION_ID NUMBER(4) PRIMARY KEY USING INDEX (CREATE INDEX LOCATIONS_PK_INX ON LOCATIONS_NAMED_INDEX(LOCATION_ID)),
DEPARTMENT_NAME VARCHAR2(30)
);

-- (39)
SELECT INDEX_NAME, TABLE_NAME FROM USER_INDEXES WHERE INDEX_NAME = 'LOCATIONS_PK_INX';



 




